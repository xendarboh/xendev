########################################################################
# https://github.com/mviereck/dockerfile-x11docker-xfce
########################################################################

# x11docker/xfce
#
# Run XFCE desktop in docker.
# Use x11docker to run image.
# Get x11docker from github:
#   https://github.com/mviereck/x11docker
#
# Examples:
#   - Run desktop:
#       x11docker --desktop x11docker/xfce
#   - Run single application:
#       x11docker x11docker/xfce thunar
#
# Options:
# Persistent home folder stored on host with   --home
# Shared host folder with                      --share DIR
# Hardware acceleration with option            --gpu
# Clipboard sharing with option                --clipboard
# ALSA sound support with option               --alsa
# Pulseaudio sound support with option         --pulseaudio
# Language setting with                        --lang [=$LANG]
# Printing over CUPS with                      --printer
# Webcam support with                          --webcam
#
# Look at x11docker --help for further options.

# FROM debian:bullseye
ARG IMAGE_BASE=
FROM ${IMAGE_BASE}

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update \
  && apt-mark hold iptables \
  && apt-get install -y -q --no-install-recommends \
      dbus-x11 \
      psmisc \
      xdg-utils \
      x11-xserver-utils \
      x11-utils \
  && apt-get install -y -q --no-install-recommends \
      xfce4 \
  && apt-get install -y -q --no-install-recommends \
      libgtk-3-bin \
      libpulse0 \
      mousepad \
      xfce4-notifyd \
      xfce4-taskmanager \
      xfce4-terminal \
# && apt-get install -y -q --no-install-recommends \
#     xfce4-battery-plugin \
#     xfce4-clipman-plugin \
#     xfce4-cpufreq-plugin \
#     xfce4-cpugraph-plugin \
#     xfce4-diskperf-plugin \
#     xfce4-datetime-plugin \
#     xfce4-fsguard-plugin \
#     xfce4-genmon-plugin \
#     xfce4-indicator-plugin \
#     xfce4-netload-plugin \
#     xfce4-places-plugin \
#     xfce4-sensors-plugin \
#     xfce4-smartbookmark-plugin \
#     xfce4-systemload-plugin \
#     xfce4-timer-plugin \
#     xfce4-verve-plugin \
#     xfce4-weather-plugin \
#     xfce4-whiskermenu-plugin \
  && apt-get install -y -q --no-install-recommends \
      libxv1 \
      mesa-utils \
      mesa-utils-extra \
  && rm -rf /var/lib/apt/lists/*

RUN sed -i \
    's%<property name="ThemeName" type="string" value="Xfce"/>%<property name="ThemeName" type="string" value="Raleigh"/>%' \
    /etc/xdg/xfce4/xfconf/xfce-perchannel-xml/xsettings.xml

# disable xfwm4 compositing if X extension COMPOSITE is missing and no config file exists
RUN Configfile="~/.config/xfce4/xfconf/xfce-perchannel-xml/xfwm4.xml" && \
echo "#!/bin/bash\n\
xdpyinfo | grep -q -i COMPOSITE || {\n\
  echo 'x11docker/xfce: X extension COMPOSITE is missing.\n\
Window manager compositing will not work.\n\
If you run x11docker with option --nxagent,\n\
you might want to add option --composite.' >&2\n\
  [ -e $Configfile ] || {\n\
    mkdir -p $(dirname $Configfile)\n\
    echo '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\
<channel name=\"xfwm4\" version=\"1.0\">\n\
\n\
  <property name=\"general\" type=\"empty\">\n\
    <property name=\"use_compositing\" type=\"bool\" value=\"false\"/>\n\
  </property>\n\
</channel>\n\
' > $Configfile\n\
  }\n\
}\n\
xdpyinfo && startxfce4 || /bin/bash -l\n\
" > /usr/local/bin/start && \
chmod +x /usr/local/bin/start

CMD start


########################################################################
# xendev
########################################################################

RUN apt update \
  && apt install --no-install-recommends -y -q \
    # base
    ca-certificates \
    curl \
    unzip \
    # fonts
    fonts-hack \
    fonts-noto-cjk \
    fonts-noto-color-emoji \
    # kitty deps
    imagemagick \
    libcanberra0 \
    librsvg2-bin \
    libxkbcommon-x11-0 \
    xz-utils \
  && rm -rf /var/lib/apt/lists/*

# https://sw.kovidgoyal.net/kitty/binary/#desktop-integration-on-linux
ENV DEST=/usr/local
RUN \
  # Install kitty to ${DEST}
  curl -L https://sw.kovidgoyal.net/kitty/installer.sh \
    | sh /dev/stdin dest=${DEST} launch=n \
  # Create symbolic links to add kitty and kitten to PATH
  && ln -sf ${DEST}/kitty.app/bin/* ${DEST}/bin/ \
  # Place the kitty.desktop file somewhere it can be found by the OS
  && mkdir -p ${DEST}/share/applications \
  && cp ${DEST}/kitty.app/share/applications/kitty.desktop ${DEST}/share/applications/ \
  # If you want to open text files and images in kitty via your file manager also add the kitty-open.desktop file
  && cp ${DEST}/kitty.app/share/applications/kitty-open.desktop ${DEST}/share/applications/ \
  # Update the paths to the kitty and its icon in the kitty.desktop file(s)
  && sed -i "s|Icon=kitty|Icon=${DEST}/kitty.app/share/icons/hicolor/256x256/apps/kitty.png|g" ${DEST}/share/applications/kitty*.desktop \
  && sed -i "s|Exec=kitty|Exec=${DEST}/kitty.app/bin/kitty|g" ${DEST}/share/applications/kitty*.desktop

# install kitty gruvbox themes
RUN \
  mkdir -p ${DEST}/kitty.app/themes \
  && cd ${DEST}/kitty.app/themes \
  && curl -LO https://github.com/wdomitrz/kitty_gruvbox_theme/archive/refs/heads/master.zip \
  && unzip master.zip \
  && mv kitty_gruvbox_theme-master gruvbox \
  && rm -f master.zip

# install NerdFonts
RUN \
  mkdir -p /usr/local/share/fonts/NerdFonts \
  && cd /usr/local/share/fonts/NerdFonts \
  && curl -LO https://github.com/ryanoasis/nerd-fonts/releases/latest/download/Hack.zip \
    && unzip -o Hack.zip \
    && rm -f Hack.zip \
  && curl -LO https://github.com/ryanoasis/nerd-fonts/releases/latest/download/NerdFontsSymbolsOnly.zip \
    && unzip -o NerdFontsSymbolsOnly.zip \
    && rm -f NerdFontsSymbolsOnly.zip \
  && fc-cache -vr /usr/local/share/fonts

# configure kitty
COPY ./conf/.config/kitty/kitty.conf /etc/skel/.config/kitty/kitty.conf

# https://brave.com/linux/
ARG INSTALL_BRAVE=0
RUN \
  if [ "${INSTALL_BRAVE}" = "1" ]; then \
    curl -fsSLO "https://dl.brave.com/install.sh{,.asc}" \
    && gpg \
      --keyserver hkps://keys.openpgp.org \
      --recv-keys D16166072CACDF2C9429CBF11BF41E37D039F691 \
    && gpg --verify install.sh.asc \
    && chmod u+x ./install.sh \
    && ./install.sh \
    && rm -f ./install.sh* \
    && rm -rf /var/lib/apt/lists/* \
  ; fi

ARG INSTALL_CHROMIUM=0
RUN \
  if [ "${INSTALL_CHROMIUM}" = "1" ]; then \
    apt update \
    && apt install --no-install-recommends -y -q \
      apt-transport-https \
      gnupg \
      software-properties-common \
    && add-apt-repository -y ppa:savoury1/chromium \
    && apt update \
    && apt install -y -q --no-install-recommends \
      chromium-browser \
    && rm -rf /var/lib/apt/lists/* \
  ; fi
