export GOPATH=~/go
export PNPM_HOME=~/.pnpm
export LUNARVIM_RUNTIME_DIR=~/.local/run/lunarvim

export PATH=~/.local/bin:${PATH}
export PATH=~/.go/bin:${GOPATH}/bin:${PATH}
export PATH=${PNPM_HOME}:${PATH}
export PATH=~/.yarn/bin:${PATH}
export PATH=./node_modules/.bin:${PATH}

export GPG_TTY=$(tty)

export TERM=screen-256color

export EDITOR=/usr/bin/vim
export VISUAL=/usr/bin/vim

# enable vi key bindings
# set -o vi

# ~20170710 fix neovim black and white bug
# https://github.com/neovim/neovim/issues/6982#issuecomment-313879899
export COLORTERM=truecolor

if [ -f ~/.bash_prompt  ]; then
    . ~/.bash_prompt
fi

command -v buf >/dev/null && eval "$(buf completion bash)"

eval "$(fnm completions --shell bash)"

# http://docs.platformio.org/en/stable/faq.html#bash-completion
eval "$(_PLATFORMIO_COMPLETE=source platformio)"
eval "$(_PIO_COMPLETE=source pio)"

# https://github.com/ajeetdsouza/zoxide#step-2-add-zoxide-to-your-shell
eval "$(zoxide init bash)"

# zoxide: When set to 1, z will print the matched directory before navigating to it.
export _ZO_ECHO=1

# https://spacevim.org/layers/gtags/
export GTAGSLABEL=pygments

# stow the local conf files
stow \
  --ignore=xendev \
  --target=/home/$(whoami)/ \
  --dir=${XENDEV_DIR} \
  conf.local

ls ~/.bash/*.sh &>/dev/null && source ~/.bash/*.sh

# (re)init nvim rplugin.vim if older than xendev build
# ensure current and create if new container volume map from host
test ~/.local/share/nvim/rplugin.vim -ot /etc/xendev-release \
  && nvim --headless +UpdateRemotePlugins +qall \
    &>/dev/null

# install extra lunarvim things in mapped volume at run-time
function mason_install {
  m=~/.local/share/lvim/mason/bin
  test ! -f ${m}/${1} && lvim --headless +"MasonInstall ${1}" +qall
}
if [ -d ~/.local/run/lunarvim ]; then
  mason_install marksman
fi

# init dir for nvim spell file(s)
spelldir=~/.local/share/nvim/spell
test ! -f ${spelldir} && mkdir -p ${spelldir}

# Workaround issue whereby tmux new window using current pwd does not respect symlinks.
# This reads and applies a file of directory mappings of the format "from:to".
dirmap() {
  F="${XENDEV_DIR}/conf.local/xendev/directory_map.txt"
  test -f "${F}" || return
  for line in $(cat "${F}")
  do
    from=$(echo "$line" | cut -d':' -f1)
    to=$(echo "$line" | cut -d':' -f2)

    if [[ $PWD =~ ^$from ]]; then
      XENDEV_DIRMAP_MSG="[xendev] directory map: $from --> $to"
      XENDEV_DIRMAP_PWD=$(echo "$PWD" | sed -e "s|^${from}|${to}|")
      echo ${XENDEV_DIRMAP_MSG} && cd ${XENDEV_DIRMAP_PWD}
    fi
  done
}
dirmap

# source bash config from mapped volume at run-time
F="${XENDEV_DIR}/conf.local/xendev/bash.sh"
test -f ${F} && source ${F}

####################################
# drop into fish shell
# - only if the parent process is not fish
# - allow bash commands (bash -c)
# https://wiki.archlinux.org/title/fish#Modify_.bashrc_to_drop_into_fish
####################################

if [[ $(ps --no-header --pid=$PPID --format=comm) != "fish" && -z ${BASH_EXECUTION_STRING} ]]
then
  exec fish
fi

# vim:syntax=sh
