# https://spacevim.org/layers/
# https://spacevim.org/documentation/#custom-configuration
# https://github.com/SpaceVim/SpaceVim/blob/master/docker/init.toml

# SpaceVim options {{{
[options]
  # vimcompatible = true
  # enable_language_specific_leader = false
  colorscheme = "gruvbox"
  colorscheme_bg = "dark"
  enable_guicolors = true
  statusline_separator = "arrow"
  statusline_inactive_separator = "arrow"
  buffer_index_type = 4
  enable_tabline_filetype_icon = true
  enable_statusline_mode = false
  bootstrap_after = "myspacevim#after"
  bootstrap_before = "myspacevim#before"

  # disabled_plugins = ["plugin_name"]

  # standard vim "q" command is nice
  windows_smartclose = ""

  # layer: autocomplete
  autocomplete_method = "coc"
  autocomplete_parens = true

  # 20220416 FIX error with autocomplete popup menu <TAB> by changing snippet engine from neosnippet (the default)
  # Error detected while processing function SpaceVim#mapping#tab[1]..SpaceVim#mapping#tab#i_tab[4]..neosnippet#expandable[1]..neosnippet#mappings#expandable[2]..neosnippet#mappings#completed_expandable[5]..<SNR>325_get_completed_snippets[7]..<SNR>325_get_user_data:
  # E474: Unidentified byte: clangd:0
  snippet_engine = "ultisnips"

  # layer: checkers
  # lint_engine = "ale"
# }}}

# display colors in the file
[[custom_plugins]]
  name = "RRethy/vim-hexokinase"
  merged = false

# vim syntax for circom
[[custom_plugins]]
  name = "iden3/vim-circom-syntax"
  merged = false

# vim syntax for json with comments (otherwise very ugly)
[[custom_plugins]]
  name = "neoclide/jsonc.vim"
  merged = false

# vim syntax for solidity
[[custom_plugins]]
  name = "TovarishFin/vim-solidity"
  merged = false

# vim syntax for prisma
[[custom_plugins]]
  name="prisma/vim-prisma"
  merged = false

## -- SpaceVim layer list start
# autocomplete Autocomplete code within SpaceVim, fuzzy find the candidates from multiple completion sources, expand snippet before cursor automatically
[[layers]]
  name = "autocomplete"

# chat SpaceVim chatting layer provides chatting with weixin in vim.

# checkers Syntax checking automatically within SpaceVim, display error on the sign column and statusline.
[[layers]]
  name = "checkers"
  show_cursor_error = false
  # lint_on_the_fly = true
  # lint_on_save = false

# chinese Layer for chinese users, include chinese docs and runtime messages

# colorscheme colorscheme provides a list of colorschemes for SpaceVim, the default colorscheme is gruvbox with dark theme.
[[layers]]
  name = "colorscheme"

# core#banner This layer provides many default banners on the welcome page.

# core#statusline This layer provides a default statusline for SpaceVim
[[layers]]
  name = "core#statusline"

# core#tabline SpaceVim core#tabline layer provides a better tabline for SpaceVim
[[layers]]
  name = "core#tabline"

# core SpaceVim core layer provides many default key bindings and features.
[[layers]]
  name = "core"

# cscope cscope layer provides a smart cscope and pycscope helper for SpaceVim, help users win at cscope
# ctrlp This layers provide a heavily customized ctrlp centric work-flow
# ctrlspace This layer provides a customized CtrlSpace centric workflow

# debug This layer provides debug workflow support in SpaceVim
[[layers]]
  name = "debug"

# default SpaceVim’s default layer contains no plugins, but It provides some better default config for SpaceVim.
[[layers]]
  name = "default"

# denite This layers provide’s a heavily customized Denite centric workflow
[[layers]]
  name = "denite"

# edit Improve code edit experience in SpaceVim, provides more text objects.
[[layers]]
  name = "edit"

# floobits This layer adds support for the peer programming tool floobits to SpaceVim.

# foldsearch This layer provides functions that fold away lines that don’t match a specific search pattern.
[[layers]]
  name = "foldsearch"

# format Code formatting layer for SpaceVim, includes a variety of formatters for many filetypes
[[layers]]
  name = "format"

# fzf This layer provides a heavily customized fzf centric workflow

# git This layer adds extensive support for git
[[layers]]
  name = "git"
  git-plugin = "fugitive"

# github This layer provides GitHub integration for SpaceVim

# gtags This layer provides gtags manager for project
[[layers]]
  name = "gtags"
  gtagslabel = "pygments"
  auto_update = false

# japanese Layer for japanese users, includes japanese docs and runtime messages
# lang#actionscript This layer is for actionscript syntax highlighting
# lang#agda This layer adds Agda language support to SpaceVim.
# lang#asciidoc Edit AsciiDoc within vim, autopreview AsciiDoc in the default browser, with this layer you can also format AsciiDoc files.
# lang#aspectj AsepctJ language support, including syntax highlighting.
# lang#assembly This layer adds Assembly language support to SpaceVim, including syntax highlighting.

# lang#autohotkey This layer adds AutohotKey language support to SpaceVim.
[[layers]]
  name = "lang#autohotkey"

# lang#batch This layer is for DOS batch file development, provides syntax highlighting, code runner and repl support for batch files.

# lang#c C/C++/Object-C language support for SpaceVim, including code completion, jump to definition, and quick runner.
[[layers]]
  name = "lang#c"

# lang#chapel This layer is for chapel development. provides syntax checking, code runner and repl support for chapel files.
# lang#clojure This layer is for Clojure development, provides autocompletion, syntax checking, code format for Clojure files.
# lang#coffeescript This layer is for CoffeeScript development, provides autocompletion, syntax checking, code format for CoffeeScript files.
# lang#crystal This layer is for crystal development, provides syntax checking, code runner and repl support for crystal files.
# lang#csharp csharp language layer, including syntax highlighting, asynchronous code runner.
# lang#d This layer is for d development, provides syntax checking and code runner support for d files.
# lang#dart This layer is for Dart development, provides autocompletion, syntax checking and code formatting for Dart files.

# lang#dockerfile Dockerfile language support, including syntax highlighting and code formatting.
[[layers]]
  name = "lang#dockerfile"

# lang#e This layer is for e development, provides syntax checking, code runner and repl support for e files.
# lang#eiffel This layer is for eiffel development, provides syntax highlighting and indentation for eiffel files.
# lang#elixir This layer is for Elixir development, provides autocompletion, syntax checking, code formatting for Elixir files.
# lang#elm This layer is for Elm development, provides autocompletion, syntax checking and code formatting for Elm files.
# lang#erlang This layer is for Erlang development, provides autocompletion, syntax checking and code formatting for Erlang files.

# lang#extra This layer adds extra language support to SpaceVim
[[layers]]
  name = "lang#extra"

# lang#factor This layer is for factor development, provide syntax checking, code runner and repl support for factor file.
# lang#fennel This layer is for fennel development, provides syntax checking, code runner and repl support for fennel files.
# lang#fortran This layer is for fortran development, provides syntax checking and code runner for fortran files.
# lang#foxpro This layer is for Visual FoxPro development, provides syntax highlighting for foxpro files.
# lang#fsharp This layer adds FSharp language support to SpaceVim

# lang#go This layer is for golang development. It also provides additional language-specific key mappings.
[[layers]]
  name = "lang#go"

# lang#goby This layer is for goby development, provides syntax checking, code runner and repl support for goby files.
# lang#gosu This layer is for gosu development, provides syntax checking, code runner and repl support for gosu files.

# lang#graphql This layer adds GraphQL file support to SpaceVim
[[layers]]
  name = "lang#graphql"

# lang#groovy This layer is for Groovy development, provides syntax checking, code runner and repl support for groovy files.
# lang#hack This layer is for hack development, provides syntax checking, code runner and repl support for hack files.
# lang#haskell Haskell language support for SpaceVim, includes code completion, syntax checking, jumping to definition, also provides language server protocol support for Haskell
# lang#haxe This layer is for haxe development, provides syntax checking, code runner for haxe files.

# lang#html Edit html in SpaceVim, with this layer, this layer provides code completion, syntax checking and code formatting for html.
[[layers]]
  name = "lang#html"

# lang#hy This layer is for hy development, provides syntax checking, code runner and repl support for hy files.
# lang#idris This layer is for idris development, provides syntax checking, code runner and repl support for idris files.
# lang#io This layer is for io development, provides code runner and repl support for io files.
# lang#ipynb This layer adds Jupyter Notebook support to SpaceVim
# lang#j This layer is for j development, provides syntax checking and repl support for j files.
# lang#janet This layer is for janet development, provides code runner and repl support for janet files.
# lang#java This layer is for Java development. All the features such as code completion, formatting, syntax checking, REPL and debug have be done in this layer.

# lang#javascript This layer provides JavaScript development support for SpaceVim, including code completion, syntax highlighting and syntax checking
[[layers]]
  name = "lang#javascript"

# lang#jsonnet jsonnet language support, include syntax highlighting.
# lang#julia This layer is for Julia development, provides autocompletion, syntax checking and code formatting
# lang#kotlin This layer adds Kotlin language support to SpaceVim, including syntax highlighting, code runner and REPL support.
# lang#lasso Lasso language support, include syntax highlighting.
# lang#latex This layer provides support for writing LaTeX documents, including syntax highlighting, code completion, formatting etc.
# lang#lisp This layer is for Common Lisp development, provides autocompletion, syntax checking, and code formatting for Common Lisp files.
# lang#livescript This layer is for livescript development, provides syntax checking, code runner and repl support for livescript files.
# lang#lua This layer is for Lua development, provides autocompletion, syntax checking, and code format for Lua files.

# lang#markdown Edit markdown within vim, autopreview markdown in the default browser, with this layer you can also format markdown files.
[[layers]]
  name = "lang#markdown"

# lang#matlab This layer adds matlab language support to SpaceVim, including syntax highlighting.
# lang#moonscript This layer is for moonscript development, provides syntax checking, code runner and repl support for moonscript files.
# lang#nim This layer adds Nim language support to SpaceVim
# lang#nix This layer adds Nix language support to SpaceVim.
# lang#ocaml This layer is for OCaml development, provides autocompletion, syntax checking, and code formatting for OCaml files.
# lang#org Edit org file within vim, autopreview org in the default browser, with this layer you can also format org file.
# lang#pact This layer is for pact development, provides syntax checking, code runner and repl support for pact files.
# lang#pascal This layer is for pascal development, provides syntax highlighting, and code runner for pascal files.
# lang#perl This layer is for Perl development, provides autocompletion, syntax checking, and code formatting for Perl files.
# lang#php PHP language support, including code completion, syntax lint and code runner
# lang#plantuml This layer is for PlantUML development, provides syntax highlighting for PlantUML files.
# lang#pony This layer is for pony development, provides syntax checking, code runner and repl support for pony files.
# lang#povray This layer is for povray development, provides syntax highlighting, and viewing images.
# lang#powershell This layer is for powershell development, provides syntax checking, code runner and repl support for powershell files.
# lang#processing This layer is for working on Processing sketches. It provides syntax checking and an app runner
# lang#prolog This layer is for Prolog development, provides syntax checking, code runner and repl support for prolog files.
# lang#puppet This layer adds Puppet language support to SpaceVim
# lang#purescript This layer is for PureScript development, provides autocompletion, syntax checking, and code formatting for PureScript files.

# lang#python This layer is for Python development, provides autocompletion, syntax checking, and code formatting for Python files.
[[layers]]
  name = "lang#python"

# lang#r This layer is for R development, provides autocompletion, syntax checking and code formatting.
# lang#racket This layer adds racket language support to SpaceVim, including syntax highlighting, code runner and REPL support.
# lang#reason This layer is for reason development, provides syntax checking, code runner and repl support for reason files.
# lang#red This layer is for Red development, provides autocompletion, syntax checking and code formatting.
# lang#rescript This layer is for ReScript development, provides syntax checking, code runner and repl support for ReScript files.
# lang#ring This layer is for ring development, provides syntax checking, code runner and repl support for ring files.
# lang#rst Take Notes in reStructuredText, autopreview in the default browser.
# lang#ruby This layer is for Ruby development, provides autocompletion, syntax checking and code formatting for Ruby files.

# lang#rust This layer is for Rust development, provides autocompletion, syntax checking, and code formatting for Rust files.
[[layers]]
  name = "lang#rust"

# lang#scala This layer adds Scala language support to SpaceVim
# lang#scheme This layer adds Scheme language support to SpaceVim

# lang#sh Shell script development layer, provides autocompletion, syntax checking, and code formatting for bash and zsh scripts.
[[layers]]
  name = "lang#sh"

# lang#slim This layer is for slim development, includes syntax highlighting for slim files.
# lang#smalltalk This layer is for smalltalk development, includes syntax highlighting for smalltalk file.
# lang#sml This layer is for Standard ML development, provides syntax highlighting and repl support for sml files.

# lang#solidity
# 20220518: uses nonworking (and unmaintained) plugin tomlion/vim-solidity
# https://github.com/SpaceVim/SpaceVim/blob/master/autoload/SpaceVim/layers/lang/solidity.vim
# [[layers]]
#   name = "lang#solidity"

# lang#swift swift language support for SpaceVim, includes code completion and syntax highlighting
# lang#tcl This layer is for Tcl development, provides syntax checking, code runner and repl support for tcl files.
# lang#teal This layer is for teal development, provides syntax checking, code runner and repl support for teal files.

# lang#toml This layer is for toml development, provides syntax checking, indentation, etc.
[[layers]]
  name = "lang#toml"

# lang#typescript This layer is for TypeScript development, including code completion, Syntax lint, and doc generation.
[[layers]]
  name = "lang#typescript"

# lang#v This layer is for v development, provides syntax checking, code runner and repl support for v files.
# lang#vbnet This layer is for Visual Basic .NET development, provides code runner for vb files.
# lang#verilog This layer is for verilog development, provides syntax checking, code runner and repl support for verilog files.

# lang#vim This layer is for writing Vimscript, including code completion, syntax checking and buffer formatting
[[layers]]
  name = "lang#vim"

# lang#vue This layer adds Vue language support to SpaceVim
[[layers]]
  name = "lang#vue"

# lang#WebAssembly This layer adds WebAssembly support to SpaceVim
# lang#wolfram This layer is for wolfram development, provides syntax checking, code runner and repl support for wolfram files.

# lang#xml This layer is for xml development, provides syntax checking, indentation etc.
[[layers]]
  name = "lang#xml"

# lang#zig This layer is for zig development, provides code runner support for zig files.

# # language-server-protocol This layers provides language server protocol for vim and neovim
# xendev: lsp features provided by coc
# [[layers]]
#   name = "lsp"
#   filetypes = [
#     # "c",
#     # "cpp",
#     "javascript",
#     "typescript",
#     "typescriptreact"
#   ]
#   # https://github.com/neovim/nvim-lspconfig/blob/master/doc/server_configurations.md
#   enabled_clients = [
#     "bashls",
#     # "clangd",
#     "cssls",
#     "dockerls",
#     "eslint",
#     "html",
#     "jsonls",
#     "solc",
#     # "tsserver"
#   ]
#   # 2022-08-01: Fix [nvim-lspconfig error attempt to concatenate local 'k' (a boolean value)](https://groups.google.com/g/spacevim/c/E5C9zXU_Xk8?pli=1)
#   #                 Doesn't matter what, just need something here
#   [layers.override_client_cmds]
#     rust_analyzer = ["rust-analyzer"]
#     # tsserver = ['typescript-language-server', '--stdio']

# leaderf This layer provides a heavily customized LeaderF centric workflow
# mail mail layer provides basic mail client for SpaceVim.

# shell This layer provides shell support in SpaceVim
[[layers]]
  name = "shell"
  default_position = "bottom"
  default_height = 30

# ssh This layer provides ssh support in SpaceVim
# sudo sudo layer provides the ability to read and write files with elevated privileges in SpaceVim
# telescope This layer provides a heavily customized telescope centric workflow
# test This layer allows to run tests directly in SpaceVim
# tmux This layers adds extensive support for tmux
# tools#dash This layer provides Dash integration for SpaceVim
# tools#mpv This layer provides mpv integration for SpaceVim
# tools#zeal This layer provides Zeal integration for SpaceVim

# tools This layer provides some tools for vim
# 2021-04-14 tools layer breaks docker build (lymslive/vnote)
# https://github.com/SpaceVim/SpaceVim/issues/4016
# [[layers]]
#   name = "tools"

# treesitter This layers adds extensive support for treesitter

# ui Awesome UI layer for SpaceVim, provide IDE-like UI for neovim and vim in both TUI and GUI
[[layers]]
  name = "ui"

# unite This layer provides a heavily customized Unite centric workflow

# VersionControl This layer provides general version control features for SpaceVim. It should work with all VC backends such as Git, Mercurial, Bazaar, SVN, etc
[[layers]]
  name = "VersionControl"

## -- SpaceVim layer list end
