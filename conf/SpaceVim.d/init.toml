# https://spacevim.org/layers/
# https://spacevim.org/documentation/#custom-configuration
# https://github.com/SpaceVim/SpaceVim/blob/master/docker/init.toml

# SpaceVim options {{{
[options]
  # vimcompatible = true
  # enable_language_specific_leader = false
  colorscheme = "gruvbox"
  colorscheme_bg = "dark"
  enable_guicolors = true
  statusline_separator = "arrow"
  statusline_inactive_separator = "arrow"
  buffer_index_type = 4
  enable_tabline_filetype_icon = true
  enable_statusline_mode = false
  bootstrap_after = "myspacevim#after"
  bootstrap_before = "myspacevim#before"

  # disabled_plugins = ["plugin_name"]

  # standard vim "q" command is nice
  windows_smartclose = ""

  # layer: autocomplete
  autocomplete_method = "coc"
  autocomplete_parens = true

  # 20220416 FIX error with autocomplete popup menu <TAB> by changing snippet engine from neosnippet (the default)
  # Error detected while processing function SpaceVim#mapping#tab[1]..SpaceVim#mapping#tab#i_tab[4]..neosnippet#expandable[1]..neosnippet#mappings#expandable[2]..neosnippet#mappings#completed_expandable[5]..<SNR>325_get_completed_snippets[7]..<SNR>325_get_user_data:
  # E474: Unidentified byte: clangd:0
  snippet_engine = "ultisnips"

  # layer: checkers
  # lint_engine = "ale"
# }}}

# display colors in the file
[[custom_plugins]]
  name = "RRethy/vim-hexokinase"
  merged = false

# vim syntax for json with comments (otherwise very ugly)
[[custom_plugins]]
  name = "neoclide/jsonc.vim"
  merged = false

## -- SpaceVim layer list start
# VersionControl  This layers provides general version control feature for vim. It should work with all VC backends such as Git, Mercurial, Bazaar, SVN, etc…
[[layers]]
  name = "VersionControl"

# autocomplete  Autocomplete code within SpaceVim, fuzzy find the candidates from multiple completion sources, expand snippet before cursor automatically
[[layers]]
  name = "autocomplete"

# chat  SpaceVim chatting layer provide chatting with qq and weixin in vim.

# checkers  Syntax checking automatically within SpaceVim, display error on the sign column and statusline.
[[layers]]
  name = "checkers"
  show_cursor_error = false
  # lint_on_the_fly = true
  # lint_on_save = false

# chinese   Layer for chinese users, include chinese docs and runtime messages

# colorscheme   colorscheme provides a list of colorscheme for SpaceVim, default colorscheme is gruvbox with dark theme.
[[layers]]
  name = "colorscheme"

# core#banner   This layer provides many default banners on welcome page.

# core#statusline   This layer provides default statusline for SpaceVim
[[layers]]
  name = "core#statusline"

# core#tabline  SpaceVim core#tabline layer provides a better tabline for SpaceVim
[[layers]]
  name = "core#tabline"

# core  SpaceVim core layer provides many default key bindings and features.
[[layers]]
  name = "core"

# cscope  cscope layer provides a smart cscope and pycscope helper for SpaceVim, help users win at cscope
# ctrlp   This layers provide a heavily customized ctrlp centric work-flow
# ctrlspace   This layer provides a customized CtrlSpace centric workflow

# debug   This layer provide debug workflow support in SpaceVim
[[layers]]
  name = "debug"

# default   SpaceVim default layer contains no plugins, but It provides some better default config for SpaceVim.
[[layers]]
  name = "default"

# denite  This layers provide a heavily customized Denite centric work-flow
[[layers]]
  name = "denite"

# edit  Improve code edit expr in SpaceVim, provide more text objects.
[[layers]]
  name = "edit"

# floobits  This layer adds support for the peer programming tool floobits to SpaceVim.

# foldsearch  This layer provides functions that fold away lines that don’t match a specific search pattern.
[[layers]]
  name = "foldsearch"

# format  Code formatting layer for SpaceVim, includes a variety of formatters for many filetypes
[[layers]]
  name = "format"

# fzf   This layers provide a heavily customized fzf centric work-flow

# git   This layers adds extensive support for git
[[layers]]
  name = "git"
  git-plugin = "fugitive"

# github  This layer provides GitHub integration for SpaceVim

# gtags   This layer provides gtags manager for project
[[layers]]
  name = "gtags"
  gtagslabel = "pygments"
  auto_update = false

# japanese  Layer for japanese users, include japanese docs and runtime messages
# lang#WebAssembly  This layer adds WebAssembly support to SpaceVim
# lang#actionscript   This layer is for actionscript syntax highlighting
# lang#agda   This layer adds Agda language support to SpaceVim.
# lang#asciidoc   Edit AsciiDoc within vim, autopreview AsciiDoc in the default browser, with this layer you can also format AsciiDoc file.
# lang#aspectj  AsepctJ language support, include syntax highlighting.
# lang#assembly   This layer adds Assembly language support to SpaceVim, including syntax highlighting.

# lang#autohotkey   This layer adds AutohotKey language support to SpaceVim.
[[layers]]
  name = "lang#autohotkey"

# lang#batch  This layer is for DOS batch file development, provide syntax highlighting, code runner and repl support for batch file.

# lang#c  C/C++/Object-C language support for SpaceVim, include code completion, jump to definition, quick runner.
[[layers]]
  name = "lang#c"

# lang#chapel   This layer is for chapel development, provide syntax checking, code runner and repl support for chapel file.
# lang#clojure  This layer is for Clojure development, provide autocompletion, syntax checking, code format for Clojure file.
# lang#coffeescript   This layer is for CoffeeScript development, provide autocompletion, syntax checking, code format for CoffeeScript file.
# lang#crystal  This layer is for crystal development, provide syntax checking, code runner and repl support for crystal file.
# lang#csharp   This layer is for csharp development
# lang#d  This layer is for d development, provide syntax checking, code runner support for d file.
# lang#dart   This layer is for Dart development, provide autocompletion, syntax checking, code format for Dart file.

# lang#dockerfile   This layer adds DockerFile to SpaceVim
[[layers]]
  name = "lang#dockerfile"

# lang#eiffel   This layer is for eiffel development, provides syntax highlighting, indent for eiffel file.
# lang#elixir   This layer is for Elixir development, provide autocompletion, syntax checking, code format for Elixir file.
# lang#elm  This layer is for Elm development, provide autocompletion, syntax checking, code format for Elm file.
# lang#erlang   This layer is for Erlang development, provide autocompletion, syntax checking, code format for Erlang file.

# lang#extra  This layer adds extra language support to SpaceVim
[[layers]]
  name = "lang#extra"

# lang#fortran  This layer is for fortran development, provide syntax checking, code runner for fortran file.
# lang#foxpro   This layer is for Visual FoxPro development, provide syntax highlighting for foxpro file.
# lang#fsharp   This layer adds FSharp language support to SpaceVim

# lang#go   This layer is for golang development. It also provides additional language-specific key mappings.
[[layers]]
  name = "lang#go"

# lang#goby   This layer is for goby development, provide syntax checking, code runner and repl support for goby file.
# lang#gosu   This layer is for gosu development, provide syntax checking, code runner and repl support for gosu file.

# lang#graphql  This layer adds GraphQL file support to SpaceVim
[[layers]]
  name = "lang#graphql"

# lang#groovy   This layer is for Groovy development, provide syntax checking, code runner and repl support for groovy file.
# lang#hack   This layer is for hack development, provide syntax checking, code runner and repl support for hack file.
# lang#haskell  Haskell language support for SpaceVim, includes code completion, syntax checking, jumping to definition, also provides language server protocol support for Haskell

# lang#html   Edit html in SpaceVim, with this layer, this layer provides code completion, syntax checking and code formatting for html.
[[layers]]
  name = "lang#html"

# lang#hy   This layer is for hy development, provide syntax checking, code runner and repl support for hy file.
# lang#idris  This layer is for idris development, provide syntax checking, code runner and repl support for idris file.
# lang#io   This layer is for io development, provide code runner and repl support for io file.
# lang#ipynb  This layer adds Jupyter Notebook support to SpaceVim
# lang#j  This layer is for j development, provide syntax checking and repl support for j file.
# lang#janet  This layer is for janet development, provide code runner and repl support for janet file.
# lang#java   This layer is for Java development. All the features such as code completion, formatting, syntax checking, REPL and debug have be done in this layer.

# lang#javascript   This layer provides JavaScript development support for SpaceVim, including code completion, syntax highlighting and syntax checking
[[layers]]
  name = "lang#javascript"

# lang#julia  This layer is for Julia development, provide autocompletion, syntax checking and code formatting
# lang#kotlin   This layer adds Kotlin language support to SpaceVim, including syntax highlighting, code runner and REPL support.
# lang#lasso  Lasso language support, include syntax highlighting.
# lang#latex  This layer provides support for writing LaTeX documents, including syntax highlighting, code completion, formatting etc.
# lang#lisp   This layer is for Common Lisp development, provide autocompletion, syntax checking, code format for Common Lisp file.
# lang#livescript   This layer is for livescript development, provide syntax checking, code runner and repl support for livescript file.
# lang#lua  This layer is for Lua development, provide autocompletion, syntax checking, code format for Lua file.

# lang#markdown   Edit markdown within vim, autopreview markdown in the default browser, with this layer you can also format markdown file.
[[layers]]
  name = "lang#markdown"

# lang#matlab   This layer adds matlab language support to SpaceVim, including syntax highlighting.
# lang#moonscript   This layer is for moonscript development, provide syntax checking, code runner and repl support for moonscript file.
# lang#nim  This layer adds Nim language support to SpaceVim
# lang#nix  This layer adds Nix language support to SpaceVim.
# lang#ocaml  This layer is for OCaml development, provide autocompletion, syntax checking, code format for OCaml file.
# lang#pact   This layer is for pact development, provide syntax checking, code runner and repl support for pact file.
# lang#pascal   This layer is for pascal development, provides syntax highlighting, code runner for pascal file.
# lang#perl   This layer is for Perl development, provide autocompletion, syntax checking, code format for Perl file.
# lang#php  PHP language support, including code completion, syntax lint and code runner
# lang#plantuml   This layer is for PlantUML development, syntax highlighting for PlantUML file.
# lang#pony   This layer is for pony development, provide syntax checking, code runner and repl support for pony file.
# lang#povray   This layer is for povray development, provide syntax highlighting, viewing images.
# lang#powershell   This layer is for powershell development, provide syntax checking, code runner and repl support for powershell file.
# lang#processing   This layer is for working on Processing sketches. It provides syntax checking and an app runner
# lang#prolog   This layer is for Prolog development, provide syntax checking, code runner and repl support for prolog file.
# lang#puppet   This layer adds Puppet language support to SpaceVim
# lang#purescript   This layer is for PureScript development, provide autocompletion, syntax checking, code format for PureScript file.

# lang#python   This layer is for Python development, provide autocompletion, syntax checking, code format for Python file.
[[layers]]
  name = "lang#python"

# lang#r  This layer is for R development, provide autocompletion, syntax checking and code format.
# lang#racket   This layer adds racket language support to SpaceVim, including syntax highlighting, code runner and REPL support.
# lang#reason   This layer is for reason development, provide syntax checking, code runner and repl support for reason file.
# lang#red  This layer is for Red development, provide autocompletion, syntax checking and code format.
# lang#rescript   This layer is for ReScript development, provide syntax checking, code runner and repl support for ReScript file.
# lang#ring   This layer is for ring development, provide syntax checking, code runner and repl support for ring file.
# lang#rst  Take Notes in reStructuredText, autopreview in the default browser.
# lang#ruby   This layer is for Ruby development, provide autocompletion, syntax checking, code format for Ruby file.

# lang#rust   This layer is for Rust development, provide autocompletion, syntax checking, code format for Rust file.
[[layers]]
  name = "lang#rust"

# lang#scala  This layer adds Scala language support to SpaceVim
# lang#scheme   This layer adds Scheme language support to SpaceVim

# lang#sh   Shell script development layer, provides autocompletion, syntax checking, code format for bash and zsh script.
[[layers]]
  name = "lang#sh"

# lang#slim   This layer is for slim development, includes syntax highlighting for slim file.
# lang#sml  This layer is for Standard ML development, provide syntax highlighting and repl support for sml file.

# lang#solidity
[[layers]]
  name = "lang#solidity"

# lang#swift  swift language support for SpaceVim, includes code completion, syntax highlighting
# lang#tcl  This layer is for Tcl development, provide syntax checking, code runner and repl support for tcl file.

# lang#toml   This layer is for toml development, provide syntax checking, indent etc.
[[layers]]
  name = "lang#toml"

# lang#typescript   This layer is for TypeScript development, includding code completion, Syntax lint, and doc generation.
[[layers]]
  name = "lang#typescript"

# lang#v  This layer is for v development, provide syntax checking, code runner and repl support for v file.
# lang#vbnet  This layer is for Visual Basic .NET development, provide code runner vb file.

# lang#vim  This layer is for writing Vimscript, including code completion, syntax checking and buffer formatting
[[layers]]
  name = "lang#vim"

# lang#vue  This layer adds Vue language support to SpaceVim
# lang#wolfram  This layer is for wolfram development, provide syntax checking, code runner and repl support for wolfram file.

# lang#xml  This layer is for xml development, provide syntax checking, indent etc.
[[layers]]
  name = "lang#xml"

# lang#zig  This layer is for zig development, provide code runner support for zig file.

# language-server-protocol  This layers provides language server protocol for vim and neovim
[[layers]]
  name = "lsp"
  filetypes = [
    # "c",
    # "cpp",
    "javascript",
    "typescript",
    "typescriptreact"
  ]
  # https://github.com/neovim/nvim-lspconfig/blob/master/doc/server_configurations.md
  enabled_clients = [
    "bashls",
    # "clangd",
    "cssls",
    "dockerls",
    "eslint",
    "html",
    "jsonls",
    "solc",
    "tsserver"
  ]

# leaderf   This layers provide a heavily customized LeaderF centric work-flow

# shell   This layer provide shell support in SpaceVim
[[layers]]
  name = "shell"
  default_position = 'bottom'
  default_height = 30

# sudo  sudo layer provides ability to read and write file elevated privileges in SpaceVim
# test  This layer allows to run tests directly on SpaceVim
# tmux  This layers adds extensive support for tmux
# tools#dash  This layer provides Dash integration for SpaceVim
# tools#mpv   This layer provides mpv integration for SpaceVim
# tools#zeal  This layer provides Zeal integration for SpaceVim

# tools   This layer provides some tools for vim
# 2021-04-14 tools layer breaks docker build (lymslive/vnote)
# https://github.com/SpaceVim/SpaceVim/issues/4016
# [[layers]]
#   name = "tools"

# ui  Awesome UI layer for SpaceVim, provide IDE-like UI for neovim and vim in both TUI and GUI
[[layers]]
  name = "ui"

# unite   This layers provide a heavily customized Unite centric work-flow

## -- SpaceVim layer list end
